{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","async","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","alert","message","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","startDate","endDate","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","summary","classnames","placeholder","initialState","project_tasks","project_task","combineReducers","action","filter","backlog","task","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","updatedProject","match","params","getProject","disabled","ProjectTask","deleteProjectTask","priorityString","priorityClass","priority","acceptanceCriteria","backlog_id","pt_sequence","Backlog","project_tasks_prop","todo_tasks","in_progress_tasks","done_tasks","status","ProjectBoard","getBacklog","BoardContent","AddTaskButton","length","projectNotFound","role","createBoardContent","createAddTaskButton","AddProjectTask","dueDate","projectTask","createProjectTask","UpdateProjectTask","createdAt","getProjectTask","updatedProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","createNewUser","newUser","Login","loginRequest","login","LoginRequest","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21aef9dd.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_PROJECTS,\r\n  GET_PROJECT,\r\n  CLEAR_ERRORS,\r\n  DELETE_PROJECT\r\n} from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n    dispatch({\r\n      type: CLEAR_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\"Are you sure you want to delete the `\" + id + \"` project?\")\r\n  ) {\r\n    try {\r\n      await axios.delete(`/api/project/${id}`);\r\n      dispatch({\r\n        type: DELETE_PROJECT,\r\n        payload: id\r\n      });\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURENT_USER = \"SET_CURENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description} </p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project </i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {/* <ProjectItem project={projectObject} /> */}\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    project: state.project\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURENT_USER, CLEAR_ERRORS } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => login request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set the received token in the headers ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to the securityReducer\r\n    dispatch({\r\n      type: SET_CURENT_USER,\r\n      payload: decoded\r\n    });\r\n    dispatch({\r\n      type: CLEAR_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\"); // remove jwtToken from local storage\r\n  setJWTToken(false); // remove jwtToken from Authentication Header\r\n  dispatch({\r\n    type: SET_CURENT_USER, // set user to empty and valitToken to false\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { security: state.security };\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                {errors.summary && (\r\n                  <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                )}\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errors: state.errors\r\n  };\r\n};\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    case CLEAR_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          task => task.projectSequence !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURENT_USER: {\r\n      return {\r\n        ...state,\r\n        validToken: action.payload ? true : false,\r\n        user: action.payload\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n    this.props.createProject(updatedProject, this.props.history);\r\n  }\r\n\r\n  async componentWillReceiveProps(nextProps) {\r\n    if (nextProps.project) {\r\n      this.setState({ ...nextProps.project });\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    name=\"projectName\"\r\n                    placeholder=\"Project Name\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"projectIdentifier\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    disabled\r\n                    value={this.state.projectIdentifier}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    name=\"description\"\r\n                    placeholder=\"Project Description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    project: state.project.project,\r\n    errors: state.errors\r\n  };\r\n};\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onDeleteClick = this.onDeleteClick.bind(this);\r\n  }\r\n\r\n  onDeleteClick(e) {\r\n    e.preventDefault();\r\n    const { projectIdentifier, projectSequence } = this.props.project_task;\r\n    this.props.deleteProjectTask(\r\n      projectIdentifier,\r\n      projectSequence,\r\n      this.props.history\r\n    );\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    switch (project_task.priority) {\r\n      case 1: {\r\n        priorityString = \"HIGH\";\r\n        priorityClass = \"bg-danger text-light\";\r\n        break;\r\n      }\r\n      case 2: {\r\n        priorityString = \"MEDIUM\";\r\n        priorityClass = \"bg-warning text-light\";\r\n        break;\r\n      }\r\n      case 3: {\r\n        priorityString = \"LOW\";\r\n        priorityClass = \"bg-info text-light\";\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {/* <!-- SAMPLE PROJECT TASK STARTS HERE --> */}\r\n        <div className=\"card mb-1 bg-light\">\r\n          <div className={`card-header text-primary ${priorityClass}`}>\r\n            ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n          </div>\r\n          <div className=\"card-body bg-light\">\r\n            <h5 className=\"card-title\">{project_task.summary}</h5>\r\n            <p className=\"card-text text-truncate \">\r\n              {project_task.acceptanceCriteria}\r\n            </p>\r\n            <Link\r\n              to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              View / Update\r\n            </Link>\r\n            <button\r\n              onClick={this.onDeleteClick}\r\n              className=\"btn btn-danger ml-4\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <!-- SAMPLE PROJECT TASK ENDS HERE --> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const createProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_sequence,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_sequence}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_sequence,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(\r\n      `/api/backlog/${backlog_id}/${pt_sequence}`,\r\n      project_task\r\n    );\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (\r\n  backlog_id,\r\n  pt_sequence,\r\n  history\r\n) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure you want to delete the `\" + pt_sequence + \"` task?\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_sequence}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_sequence\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nconst TO_DO = \"TO_DO\";\r\nconst IN_PROGRESS = \"IN_PROGRESS\";\r\nconst DONE = \"DONE\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n    let todo_tasks = [];\r\n    let in_progress_tasks = [];\r\n    let done_tasks = [];\r\n\r\n    for (let task of project_tasks_prop) {\r\n      switch (task.status) {\r\n        case TO_DO:\r\n          todo_tasks.push(task);\r\n          break;\r\n        case IN_PROGRESS:\r\n          in_progress_tasks.push(task);\r\n          break;\r\n        case DONE:\r\n          done_tasks.push(task);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {/* <!-- Backlog STARTS HERE --> */}\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card text-center mb-2\">\r\n                <div className=\"card-header bg-secondary text-white\">\r\n                  <h3>TO DO</h3>\r\n                </div>\r\n              </div>\r\n              {/* <!-- SAMPLE PROJECT TASK STARTS HERE --> */}\r\n              {todo_tasks.map(project_task => (\r\n                <ProjectTask\r\n                  key={project_task.id}\r\n                  project_task={project_task}\r\n                />\r\n              ))}\r\n              {/* <!-- SAMPLE PROJECT TASK ENDS HERE --> */}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card text-center mb-2\">\r\n                <div className=\"card-header bg-primary text-white\">\r\n                  <h3>In Progress</h3>\r\n                </div>\r\n              </div>\r\n              {/* <!-- SAMPLE PROJECT TASK STARTS HERE --> */}\r\n              {in_progress_tasks.map(project_task => (\r\n                <ProjectTask\r\n                  key={project_task.id}\r\n                  project_task={project_task}\r\n                />\r\n              ))}\r\n              {/* <!-- SAMPLE PROJECT TASK ENDS HERE --> */}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card text-center mb-2\">\r\n                <div className=\"card-header bg-success text-white\">\r\n                  <h3>Done</h3>\r\n                </div>\r\n              </div>\r\n              {/* <!-- SAMPLE PROJECT TASK STARTS HERE --> */}\r\n              {done_tasks.map(project_task => (\r\n                <ProjectTask\r\n                  key={project_task.id}\r\n                  project_task={project_task}\r\n                />\r\n              ))}\r\n              {/* <!-- SAMPLE PROJECT TASK ENDS HERE --> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- Backlog ENDS HERE --> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    let BoardContent, AddTaskButton;\r\n    const createBoardContent = (project_tasks, errors) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Tasks on this project board.\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return <Backlog key={id} project_tasks_prop={project_tasks} />;\r\n    };\r\n    BoardContent = createBoardContent(project_tasks, this.state.errors);\r\n\r\n    const createAddTaskButton = (id, errors) => {\r\n      if (!(errors.projectNotFound || errors.projectIdentifier)) {\r\n        return (\r\n          <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n            <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n          </Link>\r\n        );\r\n      }\r\n    };\r\n    AddTaskButton = createAddTaskButton(id, this.state.errors);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {AddTaskButton}\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProjectTask } from \"../../../actions/backlogActions\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"TO_DO\",\r\n      priority: 3,\r\n      dueDate: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const { id } = this.props.match.params;\r\n    const projectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    this.props.createProjectTask(id, projectTask, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errors: state.errors\r\n  };\r\n};\r\n\r\nAddProjectTask.propTypes = {\r\n  createProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { createProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      createdAt: \"\",\r\n      projectIdentifier: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_sequence } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_sequence, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { project_task } = nextProps;\r\n    this.setState({\r\n      id: project_task.id,\r\n      projectSequence: project_task.projectSequence,\r\n      summary: project_task.summary,\r\n      acceptanceCriteria: project_task.acceptanceCriteria,\r\n      status: project_task.status,\r\n      priority: project_task.priority,\r\n      dueDate: project_task.dueDate\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      createdAt: this.state.createdAt,\r\n      projectIdentifier: this.state.projectIdentifier\r\n    };\r\n    const { backlog_id, pt_sequence } = this.props.match.params;\r\n    this.props.updateProjectTask(\r\n      backlog_id,\r\n      pt_sequence,\r\n      updatedProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const errors = this.state.errors;\r\n    const { backlog_id } = this.props.match.params;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${backlog_id}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.summary}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.acceptanceCriteria}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.dueDate}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.priority}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.status}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  project_task: PropTypes.object.isRequired,\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Project Management Tool</h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start you own\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { security: state.security };\r\n};\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fullName: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      errors: nextProps.errors\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const user = {\r\n      fullName: this.state.fullName,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n    this.props.createNewUser(user, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.fullName}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.username}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.password}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.confirmPassword}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errors: state.errors,\r\n    security: state.security\r\n  };\r\n};\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    this.props.login(loginRequest);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    value={this.state.username}\r\n                    name=\"username\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    value={this.state.password}\r\n                    name=\"password\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errors: state.errors,\r\n    security: state.security\r\n  };\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? ( // Secure routes when validToken is false\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    security: state.security\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\nif (jwtToken) {\r\n  // Avoid reentering the login data on refresh.\r\n  setJWTToken(jwtToken); // Set the authorization header.\r\n  const decoded_jwtToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURENT_USER, // Set current user and validToken to true.\r\n    payload: decoded_jwtToken\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded_jwtToken.exp < currentTime) {\r\n    store.dispatch(logout()); // Handle logout\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n\r\n          {\r\n            // Public Routes\r\n          }\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n\r\n          {\r\n            // Private Routes\r\n          }\r\n          {/* Not Secured Routes \r\n          <Route exact path=\"/dashboard\" component={Dashboard} />\r\n          <Route exact path=\"/addProject\" component={AddProject} />\r\n          <Route exact path=\"/updateProject/:id\" component={UpdateProject} />\r\n          <Route exact path=\"/projectBoard/:id\" component={ProjectBoard} />\r\n          <Route exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\r\n          <Route\r\n            exact\r\n            path=\"/updateProjectTask/:backlog_id/:pt_sequence\"\r\n            component={UpdateProjectTask}\r\n          /> */}\r\n\r\n          <Switch>\r\n            {/* ------ Very important to import Switch from \"react-router-dom\" ------ */}\r\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/updateProject/:id\"\r\n              component={UpdateProject}\r\n            />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/projectBoard/:id\"\r\n              component={ProjectBoard}\r\n            />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/addProjectTask/:id\"\r\n              component={AddProjectTask}\r\n            />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/updateProjectTask/:backlog_id/:pt_sequence\"\r\n              component={UpdateProjectTask}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}